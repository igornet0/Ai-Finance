"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import tkinter as tk
from tkinter import ttk, messagebox
from typing import Optional
import threading

from ..data.database.initializer import DatabaseInitializer
from ..services import TransactionService, CategoryService, BudgetService, UserService
from .dashboard import DashboardWidget
from .widgets import TransactionTable, CategoryTree, BudgetList
from .dialogs import TransactionDialog, CategoryDialog, BudgetDialog


class MainWindow:
    """
    –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è AI Finance
    """
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞"""
        self.root = tk.Tk()
        self.root.title("üè¶ AI Finance - –õ–∏—á–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
        self.root.geometry("1200x800")
        self.root.minsize(800, 600)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        self._init_services()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self._create_menu()
        self._create_toolbar()
        self._create_main_content()
        self._create_status_bar()
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        self._load_data()
    
    def _init_services(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        try:
            self.db_initializer = DatabaseInitializer()
            self.db_initializer.initialize_database()
            
            self.transaction_service = self.db_initializer.transaction_service
            self.category_service = self.db_initializer.category_service
            self.budget_service = self.db_initializer.budget_service
            self.user_service = self.db_initializer.user_service
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {e}")
            self.root.quit()
    
    def _create_menu(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é"""
        menubar = tk.Menu(self.root)
        self.root.config(menu=menubar)
        
        # –ú–µ–Ω—é "–§–∞–π–ª"
        file_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–§–∞–π–ª", menu=file_menu)
        file_menu.add_command(label="–ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è", command=self._add_transaction)
        file_menu.add_separator()
        file_menu.add_command(label="–≠–∫—Å–ø–æ—Ä—Ç...", command=self._export_data)
        file_menu.add_command(label="–ò–º–ø–æ—Ä—Ç...", command=self._import_data)
        file_menu.add_separator()
        file_menu.add_command(label="–í—ã—Ö–æ–¥", command=self.root.quit)
        
        # –ú–µ–Ω—é "–ü—Ä–∞–≤–∫–∞"
        edit_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–ü—Ä–∞–≤–∫–∞", menu=edit_menu)
        edit_menu.add_command(label="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", command=self._manage_categories)
        edit_menu.add_command(label="–ë—é–¥–∂–µ—Ç—ã", command=self._manage_budgets)
        
        # –ú–µ–Ω—é "–û—Ç—á–µ—Ç—ã"
        reports_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–û—Ç—á–µ—Ç—ã", menu=reports_menu)
        reports_menu.add_command(label="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç", command=self._show_report)
        reports_menu.add_command(label="–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞—Ç", command=self._show_analysis)
        
        # –ú–µ–Ω—é "–°–ø—Ä–∞–≤–∫–∞"
        help_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–°–ø—Ä–∞–≤–∫–∞", menu=help_menu)
        help_menu.add_command(label="–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", command=self._show_about)
    
    def _create_toolbar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
        toolbar = ttk.Frame(self.root)
        toolbar.pack(side=tk.TOP, fill=tk.X, padx=5, pady=5)
        
        # –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        ttk.Button(toolbar, text="‚ûï –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è", command=self._add_transaction).pack(side=tk.LEFT, padx=2)
        ttk.Button(toolbar, text="üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", command=self._manage_categories).pack(side=tk.LEFT, padx=2)
        ttk.Button(toolbar, text="üìã –ë—é–¥–∂–µ—Ç—ã", command=self._manage_budgets).pack(side=tk.LEFT, padx=2)
        ttk.Button(toolbar, text="üìä –û—Ç—á–µ—Ç", command=self._show_report).pack(side=tk.LEFT, padx=2)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        ttk.Separator(toolbar, orient=tk.VERTICAL).pack(side=tk.LEFT, fill=tk.Y, padx=10)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        ttk.Button(toolbar, text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", command=self._refresh_data).pack(side=tk.LEFT, padx=2)
    
    def _create_main_content(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        # –°–æ–∑–¥–∞–µ–º notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        self.notebook = ttk.Notebook(self.root)
        self.notebook.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)
        
        # –í–∫–ª–∞–¥–∫–∞ "–î–∞—à–±–æ—Ä–¥"
        self.dashboard_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.dashboard_frame, text="üìä –î–∞—à–±–æ—Ä–¥")
        self.dashboard_widget = DashboardWidget(self.dashboard_frame, self)
        
        # –í–∫–ª–∞–¥–∫–∞ "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
        self.transactions_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.transactions_frame, text="üí≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        self.transaction_table = TransactionTable(self.transactions_frame, self)
        
        # –í–∫–ª–∞–¥–∫–∞ "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"
        self.categories_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.categories_frame, text="üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")
        self.category_tree = CategoryTree(self.categories_frame, self)
        
        # –í–∫–ª–∞–¥–∫–∞ "–ë—é–¥–∂–µ—Ç—ã"
        self.budgets_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.budgets_frame, text="üìã –ë—é–¥–∂–µ—Ç—ã")
        self.budget_list = BudgetList(self.budgets_frame, self)
    
    def _create_status_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        self.status_bar = ttk.Frame(self.root)
        self.status_bar.pack(side=tk.BOTTOM, fill=tk.X)
        
        self.status_label = ttk.Label(self.status_bar, text="–ì–æ—Ç–æ–≤")
        self.status_label.pack(side=tk.LEFT, padx=5)
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        self.db_status_label = ttk.Label(self.status_bar, text="üü¢ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
        self.db_status_label.pack(side=tk.RIGHT, padx=5)
    
    def _load_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
        def load():
            try:
                self.status_label.config(text="–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
                # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã
                self.dashboard_widget.refresh()
                self.transaction_table.refresh()
                self.category_tree.refresh()
                self.budget_list.refresh()
                self.status_label.config(text="–ì–æ—Ç–æ–≤")
            except Exception as e:
                self.status_label.config(text=f"–û—à–∏–±–∫–∞: {e}")
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: {e}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        threading.Thread(target=load, daemon=True).start()
    
    def _add_transaction(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
        dialog = TransactionDialog(self.root, self)
        if dialog.result:
            self._refresh_data()
    
    def _manage_categories(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
        dialog = CategoryDialog(self.root, self)
        if dialog.result:
            self._refresh_data()
    
    def _manage_budgets(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞–º–∏"""
        dialog = BudgetDialog(self.root, self)
        if dialog.result:
            self._refresh_data()
    
    def _show_report(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç"""
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –¥–∞—à–±–æ—Ä–¥–∞
        self.notebook.select(0)
        self.dashboard_widget.show_report()
    
    def _show_analysis(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —Ç—Ä–∞—Ç"""
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –¥–∞—à–±–æ—Ä–¥–∞
        self.notebook.select(0)
        self.dashboard_widget.show_analysis()
    
    def _export_data(self):
        """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
        messagebox.showinfo("–≠–∫—Å–ø–æ—Ä—Ç", "–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö")
    
    def _import_data(self):
        """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"""
        messagebox.showinfo("–ò–º–ø–æ—Ä—Ç", "–§—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö")
    
    def _show_about(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
        about_text = """
üè¶ AI Finance - –õ–∏—á–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
–í–µ—Ä—Å–∏—è 0.1.0

–£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –º–æ—â–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.

–§—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –£—á–µ—Ç –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
‚Ä¢ –ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞—Ç

–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å ‚ù§Ô∏è –Ω–∞ Python
        """
        messagebox.showinfo("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", about_text)
    
    def _refresh_data(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"""
        self._load_data()
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.mainloop()
    
    def get_services(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"""
        return {
            'transaction_service': self.transaction_service,
            'category_service': self.category_service,
            'budget_service': self.budget_service,
            'user_service': self.user_service
        }
