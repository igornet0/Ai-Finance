services:
  # Основное приложение
  ai-finance:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-finance-app
    command: ["tail", "-f", "/dev/null"]
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_finance
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=false
    depends_on:
      - postgres
      - redis
    networks:
      - ai-finance-network
    restart: unless-stopped

  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ai-finance-postgres
    environment:
      POSTGRES_DB: ai_finance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ai-finance-network
    restart: unless-stopped

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: ai-finance-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-finance-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx для веб-интерфейса (если будет)
  nginx:
    image: nginx:alpine
    container_name: ai-finance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - ai-finance
    networks:
      - ai-finance-network
    restart: unless-stopped

  # Мониторинг с Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-finance-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ai-finance-network
    restart: unless-stopped

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:latest
    container_name: ai-finance-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - ai-finance-network
    restart: unless-stopped

  # Backup сервис
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: ai-finance-backup
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_finance
    depends_on:
      - postgres
    networks:
      - ai-finance-network
    restart: "no"
    profiles:
      - backup

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  ai-finance-network:
    driver: bridge
